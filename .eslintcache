[{"/Users/sabrinascatena/sei/uncover-sabrina-react/src/reportWebVitals.js":"1","/Users/sabrinascatena/sei/uncover-sabrina-react/src/App.js":"2","/Users/sabrinascatena/sei/uncover-sabrina-react/src/index.js":"3","/Users/sabrinascatena/sei/uncover-sabrina-react/src/components/Square.jsx":"4","/Users/sabrinascatena/sei/uncover-sabrina-react/src/components/Grid.jsx":"5"},{"size":362,"mtime":1606173225070,"results":"6","hashOfConfig":"7"},{"size":424,"mtime":1606601433532,"results":"8","hashOfConfig":"7"},{"size":670,"mtime":1606601717458,"results":"9","hashOfConfig":"7"},{"size":499,"mtime":1606604009853,"results":"10","hashOfConfig":"7"},{"size":806,"mtime":1606689680058,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1rr4tte",{"filePath":"14","messages":"15","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22"},"/Users/sabrinascatena/sei/uncover-sabrina-react/src/reportWebVitals.js",[],"/Users/sabrinascatena/sei/uncover-sabrina-react/src/App.js",["23","24"],"/Users/sabrinascatena/sei/uncover-sabrina-react/src/index.js",[],"/Users/sabrinascatena/sei/uncover-sabrina-react/src/components/Square.jsx",[],"/Users/sabrinascatena/sei/uncover-sabrina-react/src/components/Grid.jsx",["25"],"import React, { Component } from 'react'\nimport Square from './Square'\n\n\nexport default class Grid extends Component {\n\n  render() {\n\n\n    const name = \"Sabrina\";\n    const indexToLetter = {};\n    const length = 20 * 20\n    const squares = []\n\n    for (let i = 0; i < name.length; i++) {\n      const squareIndex = Math.floor(Math.random() * length);\n      const letter = name[i];\n      indexToLetter[squareIndex] = letter;\n    }\n    console.log(indexToLetter)\n    for (let i = 0; i < length; i++) {\n      const currentLetter = indexToLetter[i];\n      if (currentLetter == undefined) {\n        squares.push(<Square letter=\"\" />)\n      } else {\n        squares.push(<Square letter={currentLetter} />)\n      }\n    }\n\n    return (\n      <div className=\"grid-container\" >\n        {squares}\n      </div>)\n  }\n}\n\n",{"ruleId":"26","severity":1,"message":"27","line":3,"column":10,"nodeType":"28","messageId":"29","endLine":3,"endColumn":14},{"ruleId":"30","severity":1,"message":"31","line":8,"column":3,"nodeType":"32","messageId":"33","endLine":10,"endColumn":4},{"ruleId":"34","severity":1,"message":"35","line":23,"column":25,"nodeType":"36","messageId":"37","endLine":23,"endColumn":27},"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected"]